trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  aksResourceGroup: 'RG02'
  aksClusterName: 'RG02-AKS1'
  subscriptionId: 'aab3378c-ce10-4a02-a67f-bd35bc48e60f'
  objectId: '1a0227bc-6295-4d6a-9586-c13ec5c262f5'  # substitua pelo objectId da Service Connection do DevOps
  prometheusNamespace: 'monitoring'

stages:
- stage: DeployMonitoring
  jobs:
  - job: Deploy
    steps:

    - task: AzureCLI@2
      displayName: 'Login e configurar acesso ao AKS'
      inputs:
        azureSubscription: 'Terraform-automation'  # nome da Service Connection
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "üîê Concedendo permiss√£o de Cluster Admin..."
          az role assignment create \
            --assignee $objectId \
            --role "Azure Kubernetes Service Cluster Admin Role" \
            --scope /subscriptions/$subscriptionId/resourceGroups/$aksResourceGroup/providers/Microsoft.ContainerService/managedClusters/$aksClusterName \
            || echo "Permiss√£o j√° atribu√≠da ou erro n√£o cr√≠tico."

          echo "üîß Acessando cluster AKS..."
          az aks get-credentials --resource-group $aksResourceGroup --name $aksClusterName --overwrite-existing

          echo "üõ†Ô∏è Criando namespace '$prometheusNamespace' (se n√£o existir)..."
          kubectl create namespace $prometheusNamespace --dry-run=client -o yaml | kubectl apply -f -

          echo "üì¶ Adicionando reposit√≥rios Helm..."
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

          echo "üìà Instalando Prometheus..."
          helm upgrade --install prometheus prometheus-community/prometheus \
            --namespace $prometheusNamespace

          echo "üìä Instalando Grafana..."
          helm upgrade --install grafana grafana/grafana \
            --namespace $prometheusNamespace \
            --set adminPassword='admin' \
            --set service.type=LoadBalancer

          echo "‚úÖ Implanta√ß√£o conclu√≠da."
