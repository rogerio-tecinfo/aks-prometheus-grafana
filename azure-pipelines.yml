trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  aksResourceGroup: 'RG02'
  aksClusterName: 'RG02-AKS1'
  subscriptionId: 'aab3378c-ce10-4a02-a67f-bd35bc48e60f'
  objectId: '1a0227bc-6295-4d6a-9586-c13ec5c262f5'
  prometheusNamespace: 'monitoring'

stages:
- stage: DeployMonitoring
  jobs:
  - job: Deploy
    steps:

    - task: AzureCLI@2
      displayName: '🔧 Configurar AKS e instalar Prometheus/Grafana'
      inputs:
        azureSubscription: 'Terraform-automation'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          set -e
          
          echo "🔐 Garantindo permissões de Cluster Admin..."
          az role assignment create \
            --assignee $objectId \
            --role "Azure Kubernetes Service Cluster Admin Role" \
            --scope /subscriptions/$subscriptionId/resourceGroups/$aksResourceGroup/providers/Microsoft.ContainerService/managedClusters/$aksClusterName \
            || echo "Permissão já atribuída ou já existente."

          echo "🔧 Acessando o cluster AKS..."
          az aks get-credentials --resource-group $aksResourceGroup --name $aksClusterName --overwrite-existing

          echo "🔎 Verificando contexto do kubectl..."
          kubectl config get-contexts
          kubectl config current-context

          echo "📁 Criando namespace '$prometheusNamespace'..."
          kubectl create namespace $prometheusNamespace --dry-run=client -o yaml | kubectl apply -f -

          echo "📦 Adicionando repositórios Helm..."
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

          echo "📈 Instalando Prometheus..."
          helm upgrade --install prometheus prometheus-community/prometheus \
            --namespace $prometheusNamespace \
            --set server.service.type=LoadBalancer

          echo "📊 Instalando Grafana..."
          helm upgrade --install grafana grafana/grafana \
            --namespace $prometheusNamespace \
            --set adminPassword='admin' \
            --set service.type=LoadBalancer

          echo "⏳ Aguardando recursos..."
          kubectl get all -n $prometheusNamespace
